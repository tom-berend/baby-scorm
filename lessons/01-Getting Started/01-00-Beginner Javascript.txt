<module>01-Beginner Javascript
<lesson>00-Information about this course
<shortdesc>What we will teach, what programming tools we will use, how is the course structured.

<p> first line?   this is _emp_ text (underscore).   this is ^bold^ text. (caret)  this is `code` text. (backtick)   this is <key>ctrl+k</key> text  < key > ctrl+k < / key > 

<break>









<title>Welcome to GameCode

<run(src=logo.ts)>

<p>Everyone dreams of writing video games. It's a great hobby, and maybe even a career. But there is a lot to learn.  So we wrote this course.

<p>There are already many great courses to help you learn.  This one is a bit different.  We are going to teach you high school math and physics, except you won't notice because we are teaching you how to write video games.




<break>
<p>Here's the thing. Writing a serious game takes serious math and programming skills.  There's no shortcut.  

<p>Video games are built on math and physics. Computer graphics rely on algebra, functions, vectors, matrices, trigonometry, and more.  Making movements look realistic needs physics, and that means some calculus.

<p>Game _design_ adds another layer. Making a game fun and engaging requires many of the disciplines of system engineering, such as probability, communications, and feedback.  






<break>
<p> So we wrote a programming course that teaches you math, physics, and programming.  It will cover most of the math and physics you need for grades 10 and 11. It will teach you some serious programming skills. And it will show you how to use the editors and compilers that programmers use.





<subtitle>JavaScript
<p(img=typescript.png)>
Many 'Learn to Code' camps use visual "toy" languages like Scratch or [GameMaker|Game Maker].  We believe that young programmers are capable of much more.  We find passion and energy in ^Making Great Things^, but that requires real tools and real learning.
<p>JavaScript is embedded in devices around you, and running every webpage you visit,  Phaser is the leading 2-D game engine, used by thousands of developers,  These are both complicated tools. Learning to use them requires work, practice, iterations, and time.

<p>We are a **Community of Learners**.  We are not a day-care or an after-school program. We learn at our own pace, following our own interests, choosing our own projects, for our own reasons.  We learn from each other, and teach each other. We collaborate on projects, we follow our curiosity, and we experiment with new ideas.
<p>When you have reached the end of our lessons, you will be ready to join the worldwide community of JavaScript programmers and game developers.  You will have the skills and confidence to continue learning with them. And of course, you will have written some awesome games.
<br>



There are many programming languages because each is good at different things.  The language we will teach you is called JavaScript.
<p> JavaScript is particularly good for writing web-based programs and for building connected smart devices - the "Internet of Things" (IOT).
<p>Specifically we will use an extended flavor of JavaScript called 'TypeScript'.


<p>Serious programmers use SLACK for collaborating on projects, sharing documents, peer support, and one-to-one chats (both text and video).  We are programmers, and we are going to do all those things.  Click on the SLACK button on the right and join our channel.


<p>We have community groups that look like Facebook groups, but we don’t serve up ads or sell your information.  The groups let you keep in touch with your programmer friends, make new friends, and show off your work.  You start as a member of the Beginner group, and you gain access to other groups as you progress.  Check in often, let us know that you are moving forward. And please check in on your friends, to keep THEM moving forward.
<p>Create an account on the right, and then you will see the ‘Learn’ and ‘Share’ buttons. Explore.  Set up your profile, upload a photo of yourself.  Say Hi!
Feel free to invite your real-world friends.  Everything is totally free. 



<break>
<p(img=scratch.png)>Many courses use a 'beginner' coding language like [<a  target="_blank" href="https://scratch.mit.edu/projects/editor/?tutorial=getStarted">Scratch</a>|scratch] or [<a  target="_blank"href="https://www.alice.org/resources/alice-3-how-tos/">Alice</a>|Alice].  They use drag-and-drop to make it easy and quick to cobble together things that look like games.  
<p>But it won't be as much fun as you think. You'll get the lessons working, but you will quickly run into limits of the training wheels.

 
<break>
<p(img=Unity_2020_UI.png)>Or you can download Unity and start trying to figure it out. <break>

<break>
<p(img=radius.jpg)>The image on the right is what you should see using Chrome.  It will be slightly different in Firefox and Microsoft Edge. If you are using another browser, then download Chrome from [<a href="https://www.google.com/chrome">https://www.google.com/chrome</a>|w w w dot google dot com] and try again.  If you have trouble, stop and get help.  You should not go on until you have a console open.

<subtitle> this is a subtitle
<p>Welcome.  This is the first lesson, the first step on a long but wonderful journey.

<p>We start every lesson by telling you what we hope you will learn. It is good to check back and ask yourself what you have actually learned, and we're going to help you do that.

<p>This lesson will tell you about a computer language that we are going to use, called 'JavaScript'.  We are going to look at the basic types of data that we can handle, and then write some simple programs.

<break>

<p(science)>Hi. I'm Science.  I'm going to pop up and tell you about the history of computing. The reason we do things in certain ways is often because of the path we took.

<p(science)>Here's a fun example - did you ever wonder why your keyboard is so
confused and hard to use, why the keys aren't just A-B-C-D? It's because the earliest mechanical typewriters were very slow, and would jam if the operator went too fast.  So the designers intentionally designed the keyboard to slow down the operators. Here's more information.

<break>
<p(history)>Hi. I'm History.  New stuff has been added to JavaScript continuously, but none of the old stuff has ever been removed.  So much of the language is like a decrepit old amusement park.

<p(history)>I'm hoping you will continue programming JavaScript, but as you look at resorces on the web, you will not understand what you are seeing.

<break>

<p(mindset)>Hi. I'm Mindset.
<break>

<p>All _values_ are made of the same kinds of bits, but they don't all behave the same.  Every _value_ has a _type_ that determines its role.  Some values are numbers, some are letters, and some are instructions.   Values are the building blocks of Javascript programs.

<p>This chapter introduces two simple value types _Number_ and _Boolean_, and some operators you can use with them.


<subtitle>Numbers


<p>The simplest type is _Number_  which are just numbers. In a JavaScript program, they are written like this:

<code(noedit)>
13
9.81

<p>We use _Number_s for counting, and sometimes for arithmetic. We can add, subtract, multiply and divide number values and produce a new number value.

<p>But first we're going to show you a neat trick.  You can run a small Javascript program right on this page.  Click on the `console.log( 2 + 2 )` below, and it will turn into a program.  Press CTRL+ENTER to run the program.  Try it now.

<code(vt52)>
console.log(2 + 2)
function a(b){
    return(b+5)
}
<p>`console.log( )` is a function that prints the value between the two brackets.  Please try each of these little programs.  Try modifying them.  Can you calculate the value of 2 + 2 + 2?

